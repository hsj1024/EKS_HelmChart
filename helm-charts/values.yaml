replicaCount: 1

# 각각의 타임스탬프를 독립적으로 관리
backendTimestamp: "latest"
frontendTimestamp: "latest"

backend:
  image:
    repository: "565393064007.dkr.ecr.ap-northeast-2.amazonaws.com/backend-users-ecr"
    tag: "latest"
    pullPolicy: Always
  service:
    type: LoadBalancer
    port: 8080

frontend:
  image:
    repository: "565393064007.dkr.ecr.ap-northeast-2.amazonaws.com/frontend-ecr"
    tag: "latest"
    pullPolicy: Always
  service:
    type: LoadBalancer
    port: 80

# 환경 변수 설정
env:
  config:
    # 백엔드 환경 변수
    SERVER_PORT: "8080"
    JWT_SECRET: "SpringBootJWTHelperTokenSecretKeyValue123!@#"
    CORS_ALLOWED_ORIGINS: "http://a97ae0a93c06d477a9665bc48f9b0609-613522362.ap-northeast-2.elb.amazonaws.com"
    CORS_ALLOWED_METHODS: "GET,POST,PUT,DELETE,OPTIONS,PATCH"
    SECURITY_USER_NAME: "admin"
    SECURITY_USER_PASSWORD: "1234"
    TOKEN_SECRET_KEY: "SpringBootJWTHelperTokenSecretKeyValue123!@#"
    ACCESS_TOKEN_PLUS_HOUR: "1"
    REFRESH_TOKEN_PLUS_HOUR: "24"

    # 프론트엔드 환경 변수
    REACT_APP_API_BASE_URL: "http://abddf22fd06a34fa0943f2781b0a1b6e-566604385.ap-northeast-2.elb.amazonaws.com:8080"
    REACT_APP_ENV: "production"

  secret:
    DB_URL: "jdbc:mariadb://users-shoppingoo-database2.c7s4augo48pb.ap-northeast-2.rds.amazonaws.com:3306/usersdb"
    DB_USERNAME: "shoppingooadmin"
    DB_PASSWORD: "404notfound!"

ingress:
  awsCertArn: "arn:aws:acm:ap-northeast-2:565393064007:certificate/82c4718b-d3ec-4d6b-9233-bfaa647368d2"
  tlsSecretName: "shortpingoo-secrets"
  hostName: "shortpingoo.shop"
